{"version":3,"sources":["views/HouseList/index.jsx","views/Index/index.jsx","views/News/index.jsx","views/Profile/index.jsx","views/Home/index.jsx","views/Login/index.jsx","App.js","serviceWorker.js","index.js","views/Home/index.module.scss"],"names":["HouseList","Component","Index","News","Profile","Home","props","TABS","id","title","icon","path","renderTabBar","tintColor","noRenderContent","map","item","Item","key","className","selectedIcon","selected","state","selectedTab","onPress","location","pathname","history","push","prerenderingSiblingsNumber","prevProps","this","setState","styles","home","exact","component","tabbar","Login","App","from","to","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"qQAYeA,E,iLARX,OACE,sE,GAHkBC,aCUTC,E,iLARX,OACE,kE,GAHcD,aCULE,E,iLARX,OACE,iE,GAHaF,aCUJG,E,iLARX,OACE,oE,GAHgBH,a,iBC2GPI,E,YA3Fb,WAAYC,GAAQ,IAAD,8BACjB,+CAQFC,KAAO,CACL,CACEC,GAAI,EACJC,MAAO,eACPC,KAAM,aACNC,KAAM,SAER,CACEH,GAAI,EACJC,MAAO,eACPC,KAAM,YACNC,KAAM,cAER,CACEH,GAAI,EACJC,MAAO,eACPC,KAAM,YACNC,KAAM,cAER,CACEH,GAAI,EACJC,MAAO,eACPC,KAAM,UACNC,KAAM,kBAhCS,EA8CnBC,aAAe,WACb,OACE,uBAAQC,UAAU,UAAUC,iBAAe,GAEvC,EAAKP,KAAKQ,KAAI,SAAAC,GACZ,OACE,sBAAQC,KAAR,CACER,MAAOO,EAAKP,MACZS,IAAKF,EAAKR,GACVE,KAAM,uBAAGS,UAAS,mBAAcH,EAAKN,QACrCU,aAAc,uBAAGD,UAAS,mBAAcH,EAAKN,QAC7CW,SAAU,EAAKC,MAAMC,cAAgBP,EAAKL,KAC1Ca,QAAS,WAEH,EAAKlB,MAAMmB,SAASC,WAAaV,EAAKL,MACxC,EAAKL,MAAMqB,QAAQC,KAAKZ,EAAKL,OAGjCkB,2BAA4B,SA7DxC,EAAKP,MAAQ,CACXC,YAAajB,EAAMmB,SAASC,UAJb,E,gFAqCAI,GACbA,EAAUL,SAASC,WAAaK,KAAKzB,MAAMmB,SAASC,UACtDK,KAAKC,SAAS,CACZT,YAAaQ,KAAKzB,MAAMmB,SAASC,a,+BAmCrC,OACE,yBAAKP,UAAWc,IAAOC,MAErB,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACxB,KAAK,QAAQyB,UAAWlC,IACrC,kBAAC,IAAD,CAAOS,KAAK,aAAayB,UAAWpC,IACpC,kBAAC,IAAD,CAAOW,KAAK,aAAayB,UAAWjC,IACpC,kBAAC,IAAD,CAAOQ,KAAK,gBAAgByB,UAAWhC,KAGzC,yBAAKe,UAAWc,IAAOI,QAASN,KAAKnB,qB,GAvF1BX,aCJJqC,E,iLARX,OACE,yE,GAHcrC,aCyBLsC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5B,KAAK,QAAQyB,UAAW/B,IAC/B,kBAAC,IAAD,CAAOM,KAAK,SAASyB,UAAWE,IAChC,kBAAC,IAAD,CAAUH,OAAK,EAACK,KAAK,IAAIC,GAAG,cCRlBC,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBElInBC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB","file":"static/js/main.980717a7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass HouseList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        这是HouseList组件\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HouseList;","import React, {Component} from 'react';\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        这是Index组件\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;","import React, {Component} from 'react';\r\n\r\nclass News extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        这是News组件\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;","import React, {Component} from 'react';\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        这是Profile组件\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\n\r\nimport {TabBar} from 'antd-mobile'\r\n\r\nimport {Route} from 'react-router-dom'\r\n\r\n//导入子组件\r\nimport HouseList from '../HouseList'\r\nimport Index from '../Index'\r\nimport News from '../News'\r\nimport Profile from '../Profile'\r\n\r\n//导入样式\r\nimport styles from './index.module.scss'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super()\r\n\r\n    this.state = {\r\n      selectedTab: props.location.pathname\r\n    };\r\n  }\r\n\r\n  //Tabs数组\r\n  TABS = [\r\n    {\r\n      id: 1,\r\n      title: '首页',\r\n      icon: 'icon-index',\r\n      path: '/home'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '找房',\r\n      icon: 'icon-info',\r\n      path: '/home/list'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '资讯',\r\n      icon: 'icon-info',\r\n      path: '/home/news'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '我的',\r\n      icon: 'icon-my',\r\n      path: '/home/profile'\r\n    },\r\n  ]\r\n\r\n  //当组件切换时，设置selectedTab属性\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.location.pathname !== this.props.location.pathname) {\r\n      this.setState({\r\n        selectedTab: this.props.location.pathname\r\n      })\r\n    }\r\n  }\r\n\r\n  //导航栏组件封装函数\r\n  renderTabBar = () => {\r\n    return (\r\n      <TabBar tintColor=\"#21B97A\" noRenderContent>\r\n        {\r\n          this.TABS.map(item => {\r\n            return (\r\n              <TabBar.Item\r\n                title={item.title}\r\n                key={item.id}\r\n                icon={<i className={`iconfont ${item.icon}`}></i>}\r\n                selectedIcon={<i className={`iconfont ${item.icon}`}></i>}\r\n                selected={this.state.selectedTab === item.path}\r\n                onPress={() => {\r\n                  //避免重复点击跳转\r\n                  if (this.props.location.pathname !== item.path) {\r\n                    this.props.history.push(item.path)\r\n                  }\r\n                }}\r\n                prerenderingSiblingsNumber={0}\r\n              >\r\n              </TabBar.Item>\r\n            )\r\n          })\r\n        }\r\n      </TabBar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.home}>\r\n        {/*路由切换部分 */}\r\n        <div>\r\n          <Route exact path=\"/home\" component={Index}/>\r\n          <Route path=\"/home/list\" component={HouseList}/>\r\n          <Route path=\"/home/news\" component={News}/>\r\n          <Route path=\"/home/profile\" component={Profile}/>\r\n        </div>\r\n        {/*tabBar*/}\r\n        <div className={styles.tabbar}>{this.renderTabBar()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        这是登录页面\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\n//导入字体图标样式\nimport './assets/fonts/iconfont.css'\n\n//全局的样式\nimport './App.css'\n\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\n//导入子组件\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Redirect exact from=\"/\" to=\"/home\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__321Jh\",\"tabbar\":\"Home_tabbar__1WFas\"};"],"sourceRoot":""}